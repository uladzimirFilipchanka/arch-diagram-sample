name: Create Release

on:
  # allow to trigger job manually from UI
  workflow_dispatch:
  # trigger on main branch push (direct or via PR merge)
  push:
    branches:
      - 'main'

env:
  # Flag to disable deploy step
  DEPLOY_TO_AWS: true

# Disable parallel execution
concurrency: release

jobs:
  pr-build:
    name: Create Release
    runs-on: ubuntu-latest
    # Required by 'git push'
    permissions:
      checks: write
      contents: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # Generate RELEASE_VERSION var (i.e. v12-63hef73)
      - name: Create Release Version
        run: echo "RELEASE_VERSION=v${{github.run_number}}-${GITHUB_SHA::7}" >> $GITHUB_ENV
      # Create but not yet push release tag before Gradle run
      - name: Create Release Tag
        run: git tag ${{env.RELEASE_VERSION}}
      # 'Build' task depends on 'check' which depends on 'test' task in its turn
      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/deployinator:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/deployinator:${{env.RELEASE_VERSION}}
          push: true
      # Pushing release tag only if everything before passed
      - name: Push Release Tag
        run: git push origin ${{env.RELEASE_VERSION}}
